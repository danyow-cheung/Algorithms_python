'''問題描述【回文數】
找到其平方具有對稱性質的數'''

'''問題分析
使用數組存儲平方後的每一位，再將數組中的元素按照下標從大到小的順序從新排列，如果於之前相同則是回文數'''

'''算法分析
從低位到高位將某個整數拆分，使用對10進行求模運算
如下面代碼所示
i = 0
while a!= 0:
    # 從低位到高位分解a的每一位，存於數組m[1]
    m[i] = a%10
    a//= 10
    i+=1
'''

'''重新組合成一個新的數的時候，只需要·每個數字乘以所在位置對應的權值，然後相加即可
如下面代碼所示
while i >0:
    # t記錄某一位置對應的權值
    k += m[i-1]*t
    t *= 10
    i -= 1
'''

# 完整的程序
m = [1]*17
count = 0
print("編號  號碼  回文數")
for n in range(1,256):
    k,i,t,a = 0,0,1,n*n
    squ = a
    while a!=0:
        # 從低到高分解a的每一位存於數組m[1]~m[16]
        m[i] = a%10
        a//=10
        i += 1
    while i>0:
        # t記錄某一位置對應的權值
        k += m[i-1]*t
        t *= 10
        i -=1
    if k==squ:
        count+= 1
        print("%2d%10d%10d"%(count,n,n*n))
        
'''問題擴展
另外一種判斷回文數的方法是，將數據中呢的每一位數分離出來，比較各個位置上的數據'''
if __name__=="__main__":
    x = int(input("請輸入一個5位數整數： "))
    if x < 10000 or x > 99999:
        print("輸入有誤")
    else:
        # 拆分最高萬位
        ten_thousand = x//10000
        # 拆分千位
        thousand = x%10000//1000
        # 拆分十位
        ten = x%100//10
        # 拆分個位
        indiv = x%10
        if indiv ==ten_thousand and ten==thousand:
            print("%d是回文數"%x)
        else:
            print("%d不是回文數"%x)

'''問題描述【阿姆斯特朗數】
如果一个整数等于其各个数字的立方和，则该数称为“阿姆斯特朗数”（亦称为自恋性数）。
如153=13+5^3+3^3
就是一个“阿姆斯特朗数”。试编程求1000以内的所有“阿姆斯特朗数
'''

'''問題分析
【阿姆斯特朗】和【水仙花】不同在於
阿姆斯特朗沒規定有幾位數字，水仙花特定為3位
'''

'''算法分析：【從低位到高位進行拆分】
从低位到高位进行拆分，
每次拆分的都是当前数的个位，
可以用当前数n对10求模，
即n%10，这样最后一位就被分离出来；
再次分离的是原数的次低位，对于次低位，
要想办法让其成为新数的最低位，可采用原数n对10求商的方法，
即n//10。其他位置的数据求法同上。
'''
# if __name__ =="__main__":
#     # 列表用來存儲千百十個位
#     a = [0,0,0,0]
#     print("10000內阿姆斯特丹數: ")
#     for i in range(2,10000):
#         t = 0
#         k = i 
#         # 從按低位到高位的順序拆分數
#         while k :
#             a[t] = k%10
#             k = k//10
#             t+= 1
#         sum = a[0]**3+a[1]**3+a[2]**3+a[3]**3
#         if i == sum:
#             print("%d\t"%i,end=' ')

'''問題擴展
算法核心更改為【從高位向低位進行拆分】
'''
if __name__ =="__main__":
    # 列表用來存儲千百十個位
    a = [0,0,0]
    print("1000內阿姆斯特丹數: ")
    for i in range(2,1000):
        t = 0
        k = 1000 
        # 從按低位到高位的順序拆分數
        while k>=10:
            a[t] = (i%k)//(k//10)
            k = k//10
            t += 1
        sum = a[0]**3+a[1]**3+a[2]**3
        if i == sum:
            print("%d\t"%i,end=' ')


'''问题描述
银行整存整取存款不同期限月利率为
·0.63%，期限为1年；
·0.66%，期限为2年；
·0.69%，期限为3年；
·0.75%，期限为5年；
·0.84%，期限为8年。
现在已知某人手上有2000元，
要求通过计算选择出一种存钱方案，
使得这笔钱存入银行20年后获得的利息最多。
假定银行对超出存款期限的那部分时间不付利息
'''


'''问题分析
为获取最多利息，应该在存入银行的钱到期后马上取出再存入
2000x(1+0.063)x^1 x(1+0.066)x^2 x (1+0.069)x^3 x(1+0.075)x^5 x (1+0.084)x^8
'''

if __name__ =="__main__":
    # 在20年中，1年期限存了x1次,2年期限存了x2次，以此类推
    max = 0.0
    for x8 in range(0,3):
        # 存款5年的最大次数
        t5 = (20-8*x8)//5
        
        for x5 in range(0,t5+1):
            # 存款3年最大次数
            t3 = (20-8*x8-5*x5)//3 
            for x3 in range(0,t3+1):
                # 存款2年最大次数
                t2 = (20-8*x8-5*x5-3*x3)//2
                for x2 in range(0,t2+1):
                    # 存款期限限定条件
                    x1 = 20-8*x8-5*x5-3*x3 - 2*x2
                    # 判断条件
                    # **表示幂运算
                    result = 2000* ((1+0.0063*12)**x1) * ((1+2*0.0066*12)**x2)* ((1+3*0.0069*12)**x3) * ((1+5*0.0075*12)**x5) * ((1+8*0.0084*12)**x8)
                    # y1、y2、y3、y5、y8用于记录获利最多的存款方式
                    if result > max:
                        max = result
                        y1 = x1
                        y2 = x2
                        y3 = x3
                        y5 = x5
                        y8 = x8
    # 输出结果
    print("获得利息最多的存款方式为：");
    print("8年期限的存了%d次" %y8);
    print("5年期限的存了%d次" %y5);
    print("3年期限的存了%d次" %y3);
    print("2年期限的存了%d次" %y2);
    print("1年期限的存了%d次" %y1);
    print("存款人最终的获得的本利合计：%0.2f" %result)


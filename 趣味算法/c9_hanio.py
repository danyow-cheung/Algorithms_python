'''問題描述【汉诺塔問題】
塔内有A、B、C三个座。开始时A座上有64 个盘子，盘子大小不同，
但保证大的在下，小的在上。现在有一个 和尚想将这64个盘子从A座移动到C座，
但他每次只能移动一个盘 子，且在移动过程中在3个座上都必须保持大盘在下小盘
在上的状 态。在移动过程中可以利用B座，
要求编程将移动步骤打印出来。汉 诺塔示意图如图9.11所示。
'''

def hanoi(N,A,B,C):
    if N==1:
        # 將a座剩下的第N個盤子移動到C座上
        print("移动 %d 從%c到%c"%(N,A,C))
    else:
        # 借助C座將N-1個盤子從A座移動到B座
        hanoi(N-1,A,C,B)
        print("移动 %d 從%c到%c"%(N,A,C))
        hanoi(N-1,B,A,C)

if __name__ =="__main__":
    # 輸入移動的盤子個數
    n = int(input("輸入盤子數"))
    print('移動%2d個盤子的步驟:'%n)
    # 調用遞歸函數
    hanoi(n,"A","B","C")

